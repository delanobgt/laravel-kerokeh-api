{"version":3,"sources":["media/bg.mp4","store/auth/types.ts","apis/kerokeh.ts","store/auth/actions.ts","store/auth/constants.ts","store/auth/reducer.ts","store/favorite/types.ts","store/favorite/constants.ts","store/favorite/actions.ts","store/favorite/methods.ts","store/favorite/reducer.ts","store/user/types.ts","store/user/actions.ts","store/user/constants.ts","store/user/reducer.ts","store/index.ts","components/generic/Link.tsx","util/helper.ts","components/main/Nav/MenuList.tsx","hooks/useChildren.ts","components/generic/dialog/BasicDialog.tsx","components/generic/input/ImageInput.tsx","components/main/Nav/CreateDialog.tsx","components/main/Nav/MyDrawer.tsx","components/main/Nav/index.tsx","components/generic/input/DatePicker.tsx","redux-form/renderers.tsx","redux-form/validators.ts","components/main/Auth/dialogs/LoginDialog.tsx","components/main/Auth/dialogs/SignUpDialog.tsx","components/main/Auth/Login/index.tsx","components/main/Auth/Logout/index.tsx","components/generic/table/table-components.tsx","components/generic/table/ReactTableSSR.tsx","hooks/useIntervalRun.ts","components/generic/IntervalRunStatus.tsx","components/main/User/TopAction.tsx","components/generic/input/BasicSelect.tsx","components/main/User/FilterForm.tsx","components/generic/SortForm.tsx","hooks/useTableUrlState.ts","components/generic/table/table-infos.tsx","components/generic/CollapseFilterAndSort.tsx","components/main/User/index.tsx","Router/routes.ts","components/misc/JwtTimer.tsx","components/main/Dashboard/index.tsx","Router/index.tsx","util/serviceWorker.ts","index.tsx"],"names":["module","exports","EAuthActionTypes","axios","defaults","timeout","config","create","baseURL","process","headers","authorization","localStorage","getItem","signIn","credentials","a","kerokehApi","post","response","authState","data","setItem","token","type","SIGN_IN","signUp","SIGN_UP","getMe","get","user","GET_ME","EFavoriteActionTypes","initialState","getFavorites","favorites","FAVORITE_GET","setPlayingFavorite","favorite","FAVORITE_PLAYING_SET","createFavorite","file","formData","FormData","append","EUserActionTypes","playingFavorite","getUsers","pagination","filter","sorts","sort","_","chain","map","field","dir","join","value","created_at","Boolean","created_at_start","created_at_end","undefined","params","pickBy","omit","val","users","meta","USER_GET","realTotal","total","rootReducer","combineReducers","auth","state","action","SIGN_OUT","favorie","form","formReducer","styled","Link","goPromise","promise","res","formatDuration","duration","hh","Math","floor","length","mm","MenuList","setDrawerOpen","useSnackbar","React","useState","loading","setLoading","error","setError","dispatch","useDispatch","fetch","useCallback","err","console","log","useSelector","useEffect","style","textAlign","CircularProgress","size","Typography","variant","color","align","Button","onClick","List","fav","ListItem","button","key","id","ListItemIcon","Contactless","ListItemText","primary","song","title","secondary","useChildProps","children","whitelist","useMemo","concat","reduce","childProps","child","includes","Error","props","BasicDialog","handleCancel","dismiss","noCallback","noText","yesText","showNoAction","showYesAction","bgClose","open","restProps","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","details","section","DialogActions","yesCallback","autoFocus","MainDiv","div","label","onChange","accept","extensions","maxSize","inputRef","useRef","errors","setErrors","realOnChange","event","newErrors","target","files","pExt","ext","toLowerCase","endsWith","checkExtension","name","push","checkSize","current","click","ref","display","CreateDialog","refresh","snackbar","setFile","completed","handleSave","e","preventDefault","showMessage","maxWidth","fullWidth","onSubmit","top","when","collapse","ImageInput","alt","src","width","LinearProgress","disabled","useStyles","makeStyles","list","BigText","TemporaryDrawer","classes","drawerOpen","createDialogOpen","setCreateDialogOpen","silentFetch","sideList","className","role","onKeyDown","alignItems","justifyContent","paddingRight","Divider","padding","Drawer","anchor","keepMounted","theme","grow","flexGrow","menuButton","marginRight","spacing","breakpoints","up","PrimarySearchAppBar","anchorEl","setAnchorEl","isMenuOpen","handleMenuClose","menuId","AppBar","position","Toolbar","IconButton","aria-label","noWrap","edge","aria-controls","aria-haspopup","currentTarget","AccountCircle","Menu","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","to","DatePicker","inputVariant","utils","DateFnsUtils","snakeCase","format","renderTextField","input","touched","custom","TextField","placeholder","helperText","marginBottom","requiredValidator","reduxForm","handleSubmit","Field","component","validate","Login","window","innerWidth","windowWidth","setWindowWidth","innerHeight","windowHeight","setWindowHeight","loginDialogOpen","setLoginDialogOpen","signUpDialogOpen","setSignUpDialogOpen","player","handleResize","addEventListener","removeEventListener","p","containerWidth","containerHeight","BgVideo","poster","autoPlay","muted","loop","zIndex","Grid","container","justify","height","item","xs","sm","md","lg","letterSpacing","borderWidth","Logout","removeItem","Title","Entry","Label","Value","HeaderTableCellDiv","BodyTableCell","TableCell","makeHeaderTableCell","column","render","makeBodyTableCell","cell","getCellProps","ReactTableSSR","columns","rowCount","onPaginationChange","disableSorting","pageIndex","pageSize","defaultColumn","Filter","onPaginationChangeRef","useTable","manualPagination","pageCount","ceil","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","handleChangePage","newPage","handleChangeRowsPerPage","newPageSize","parseInt","Table","TableHead","headerGroup","index","TableRow","getHeaderGroupProps","Hidden","mdDown","lgUp","TableBody","row","getRowProps","smDown","cells","mdUp","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore","ExpansionPanelDetails","Header","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","onChangeRowsPerPage","labelRowsPerPage","useIntervalRun","callback","delay","savedCallback","runningRef","running","setRunning","lastTimeRef","lastTime","setLastTime","alive","setAlive","identity","setIdentity","tick","ret","Promise","catch","finally","setTimeout","clearTimeout","setInterval","clearInterval","restart","intervalRun","refreshDelay","RootDiv","IntervalRunStatus","BasicSelect","labelId","setLabelId","init","crypto","randomBytes","toString","FormControl","InputLabel","Select","String","Div","FilterForm","updateFilter","username","full_name","email","store_closed","banned","froze","is_seller","date","moment","toDate","SortForm","sortFields","updateSorts","usedSortFields","mapKeys","handleAdd","newSorts","handleReplace","handleToggleSort","handleDelete","slice","sField","has","startCase","ArrowUpward","ArrowDownward","Close","initFilter","initPagination","initSorts","useReactRouter","location","history","setFilter","setPagination","setSorts","parsed","queryString","parse","search","query","stringify","stringifySorts","pathname","split","_sort","_filter","offset","updatePagination","_pagination","_sorts","TablePaper","Paper","TableInfoWrapper","TableTitle","CollapseFilterAndSort","defaultExpanded","expanded","setExpanded","toggleShow","KeyboardArrowUp","KeyboardArrowDown","Collapse","in","Users","RoutePath","useTableUrlState","utc","limit","userRealTotal","userSortFields","autoFetch","setIntervalRunAlive","restartIntervalRun","dRestartIntervalRun","debounce","accessor","Cell","original","elevation","marginLeft","isArray","TopAction","Number","JwtTimer","dialogOpen","setDialogOpen","setTimerMs","decoded","jwtDecode","expiredTimeLeftMs","max","exp","valueOf","expiredTimeout","timerInterval","Dashboard","EErrorType","accompanimentInstance","vocalsInstance","vocalMuted","setVocalMuted","volume","backgroundColor","bottom","left","getAudioInstance","instance","audioLists","musicSrc","accompaniment_path","mode","showMiniModeCover","showMiniProcessBar","showReload","showDownload","showPlayMode","showThemeSwitch","showLyric","showDestroy","onAudioSeeked","audioInfo","currentTime","onAudioPlay","play","onAudioPause","pause","vocals_path","right","fontSize","CenterItAll","routes","routePath","DASHBOARD","LOGOUT","USER","User","AdminRoutes","FETCH_FAIL","SESSION_EXPIRED","href","route","path","App","LOGIN","hostname","match","store","createStore","myTheme","createMuiTheme","palette","main","ReactDOM","SnackbarProps","autoHideDuration","Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2ab2fd1c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.91d25d2c.mp4\";","// enums\nexport enum EAuthActionTypes {\n  SIGN_IN = \"@@auth/SIGN_IN\",\n  SIGN_UP = \"@@auth/SIGN_UP\",\n  SIGN_OUT = \"@@auth/SIGN_OUT\",\n  GET_ME = \"@@auth/GET_ME\",\n}\n\n// entity types\nexport interface IAuthUser {\n  id: number;\n  name: string;\n  email: string;\n}\n\n// redux state type\nexport interface IAuthState {\n  token: string;\n  user?: IAuthUser;\n}\n\n// action types\nexport interface ISignInAction {\n  type: EAuthActionTypes.SIGN_IN;\n  authState: IAuthState;\n}\nexport interface ISignUpAction {\n  type: EAuthActionTypes.SIGN_UP;\n  authState: IAuthState;\n}\n\nexport interface ISignOutAction {\n  type: EAuthActionTypes.SIGN_OUT;\n}\n\nexport interface IGetMeAction {\n  type: EAuthActionTypes.GET_ME;\n  user: IAuthUser;\n}\n\nexport type AuthActionType =\n  | ISignInAction\n  | ISignUpAction\n  | ISignOutAction\n  | IGetMeAction;\n","import axios from \"axios\";\n\naxios.defaults.timeout = 60 * 4 * 1000;\n\nexport default (config?: Record<string, string | number>): any => {\n  return axios.create({\n    ...config,\n    baseURL: process.env.REACT_APP_KEROKEH_API_BASE_URL,\n    headers: { authorization: \"Bearer \" + localStorage.getItem(\"auth_token\") },\n  });\n};\n","import {\n  EAuthActionTypes,\n  ISignInAction,\n  ISignOutAction,\n  IGetMeAction,\n  ISignUpAction,\n} from \"./types\";\nimport kerokehApi from \"src/apis/kerokeh\";\nimport { PRIMARY_ROUTE } from \"./constants\";\n\nexport const signIn = async (credentials: {\n  email: string;\n  password: string;\n}): Promise<ISignInAction> => {\n  const response = await kerokehApi().post(\n    `${PRIMARY_ROUTE}/login`,\n    credentials\n  );\n  const authState = response.data;\n  localStorage.setItem(\"auth_token\", authState.token);\n  return { type: EAuthActionTypes.SIGN_IN, authState };\n};\n\nexport const signUp = async (credentials: {\n  name: string;\n  email: string;\n  password: string;\n}): Promise<ISignUpAction> => {\n  const response = await kerokehApi().post(\n    `${PRIMARY_ROUTE}/signup`,\n    credentials\n  );\n  const authState = response.data;\n  localStorage.setItem(\"auth_token\", authState.token);\n  return { type: EAuthActionTypes.SIGN_UP, authState };\n};\n\nexport const signOut = (): ISignOutAction => {\n  localStorage.removeItem(\"auth_token\");\n  return { type: EAuthActionTypes.SIGN_OUT };\n};\n\nexport const getMe = async (): Promise<IGetMeAction> => {\n  const response = await kerokehApi().get(`${PRIMARY_ROUTE}/me`);\n  const { user } = response.data;\n  return { type: EAuthActionTypes.GET_ME, user };\n};\n","export const PRIMARY_ROUTE = \"/auth\";\n","import { Reducer } from \"redux\";\nimport { EAuthActionTypes, IAuthState, AuthActionType } from \"./types\";\n\nconst initialState: IAuthState = {\n  token: \"\",\n  user: null,\n};\n\nconst reducer: Reducer<IAuthState, AuthActionType> = (\n  state = initialState,\n  action: AuthActionType\n): IAuthState => {\n  switch (action.type) {\n    case EAuthActionTypes.SIGN_UP:\n    case EAuthActionTypes.SIGN_IN: {\n      const { token, user } = action.authState;\n      return { token, user };\n    }\n    case EAuthActionTypes.SIGN_OUT: {\n      return initialState;\n    }\n    case EAuthActionTypes.GET_ME: {\n      const user = action.user;\n      return {\n        ...state,\n        user,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport { reducer as authReducer };\n","// enums\nexport enum EFavoriteActionTypes {\n  FAVORITE_GET = \"@@favorite/FAVORITE_GET\",\n  FAVORITE_PLAYING_SET = \"@@favorite/FAVORITE_PLAYING_SET\",\n}\n\n// entity types\nexport interface ISong {\n  id: number;\n  title: string;\n  duration: number;\n  accompaniment_path: string;\n  vocals_path: string;\n  created_at: string;\n  updated_at: string;\n}\nexport type PSong = Partial<ISong>;\n\nexport interface IFavorite {\n  id: number;\n  user_id: number;\n  song_id: number;\n  created_at: string;\n  updated_at: string;\n  song: ISong;\n}\nexport type PFavorite = Partial<IFavorite>;\n\n// redux state type\nexport interface IFavoriteState {\n  favorites: IFavorite[];\n  playingFavorite: IFavorite;\n}\n\n// action types\nexport interface IFavoriteGetAction {\n  type: EFavoriteActionTypes.FAVORITE_GET;\n  favorites: IFavorite[];\n}\n\nexport interface IPlayingFavoriteSetAction {\n  type: EFavoriteActionTypes.FAVORITE_PLAYING_SET;\n  favorite: IFavorite;\n}\n\nexport type FavoriteActionType = IFavoriteGetAction | IPlayingFavoriteSetAction;\n","export const PRIMARY_ROUTE = \"/favorite\";\n","import {\n  IFavorite,\n  IFavoriteGetAction,\n  IPlayingFavoriteSetAction,\n  EFavoriteActionTypes,\n} from \"./types\";\nimport kerokehApi from \"src/apis/kerokeh\";\nimport { PRIMARY_ROUTE } from \"./constants\";\n\nexport const getFavorites = async (): Promise<IFavoriteGetAction> => {\n  const response = await kerokehApi().get(`${PRIMARY_ROUTE}`);\n  const favorites = response.data;\n  return {\n    type: EFavoriteActionTypes.FAVORITE_GET,\n    favorites,\n  };\n};\n\nexport const setPlayingFavorite = (\n  favorite: IFavorite\n): IPlayingFavoriteSetAction => {\n  return {\n    type: EFavoriteActionTypes.FAVORITE_PLAYING_SET,\n    favorite,\n  };\n};\n","import kerokehApi from \"src/apis/kerokeh\";\nimport { IFavorite } from \"./types\";\nimport { PRIMARY_ROUTE } from \"./constants\";\n\nexport const createFavorite = async (file: File): Promise<IFavorite> => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  const response = await kerokehApi().post(PRIMARY_ROUTE, formData);\n  return response.data;\n};\n","import { Reducer } from \"redux\";\nimport {\n  EFavoriteActionTypes,\n  IFavoriteState,\n  FavoriteActionType,\n} from \"./types\";\n\nconst initialState: IFavoriteState = {\n  favorites: [],\n  playingFavorite: null,\n};\n\nconst reducer: Reducer<IFavoriteState, FavoriteActionType> = (\n  state = initialState,\n  action: FavoriteActionType\n): IFavoriteState => {\n  switch (action.type) {\n    case EFavoriteActionTypes.FAVORITE_GET: {\n      const { favorites } = action;\n      return {\n        ...state,\n        favorites,\n      };\n    }\n    case EFavoriteActionTypes.FAVORITE_PLAYING_SET: {\n      const { favorite } = action;\n      return {\n        ...state,\n        playingFavorite: favorite,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport { reducer as favoriteReducer };\n","// enums\nexport enum EUserActionTypes {\n  USER_GET = \"@@user/USER_GET\"\n}\n\n// entity types\nexport interface IUser {\n  active_refund_shipping_address_id: number;\n  active_shipping_address_id: number;\n  bank: {\n    id: number;\n    name: string;\n    number: string;\n    owner: string;\n    used_for_withdraw: boolean;\n    user_id: number;\n  };\n  banned: boolean;\n  birthday: string;\n  country_code: string;\n  created_at: string;\n  email: string;\n  failed_login_count: number;\n  froze: boolean;\n  full_name: string;\n  gender: string;\n  id: number;\n  is_seller: false;\n  last_login_at: string;\n  last_login_device: string;\n  last_login_ip: string;\n  login_count: number;\n  phone: string;\n  phone_verification_counter: number;\n  qr_code: string;\n  referral_code: string;\n  referrer_id: number | null;\n  store_close_end_date: string | null;\n  store_close_start_date: string | null;\n  store_closed: boolean;\n  username: string;\n  verified_email: string | null;\n  verified_phone: string;\n  wallet: {\n    amount: number;\n    id: number;\n    user_id: number;\n  };\n}\n\nexport interface IShippingAddress {\n  additional_info: string | null;\n  address: string;\n  city: string;\n  country: string;\n  id: number;\n  name: string;\n  phone: string;\n  province: string;\n  recipient: string;\n  used_for_transaction: boolean;\n  user_id: number;\n  zip_code: string;\n}\n\ninterface IUserFilter {\n  id: string;\n  username: string;\n  full_name: string;\n  email: string;\n  store_closed: string;\n  banned: string;\n  froze: string;\n  is_seller: string;\n  created_at_start: string;\n  created_at_end: string;\n}\nexport type PUserFilter = Partial<IUserFilter>;\n\ninterface IUserPagination {\n  limit: number;\n  offset: number;\n}\nexport type PUserPagination = Partial<IUserPagination>;\n\nexport type UserSortField = \"id\" | \"username\" | \"full_name\" | \"email\";\n\n// redux state type\nexport interface IUserState {\n  users: IUser[];\n  realTotal: number;\n}\n\n// action types\nexport interface IUserGetAction {\n  type: EUserActionTypes.USER_GET;\n  users: IUser[];\n  realTotal: number;\n}\n\nexport type UserActionType = IUserGetAction;\n","import _ from \"lodash\";\nimport {\n  EUserActionTypes,\n  IUserGetAction,\n  PUserFilter,\n  PUserPagination,\n  UserSortField,\n} from \"./types\";\nimport kerokehApi from \"src/apis/kerokeh\";\nimport { ISort } from \"src/util/types\";\nimport { PRIMARY_ROUTE } from \"./constants\";\n\nexport const getUsers = async (\n  pagination: PUserPagination,\n  filter: PUserFilter,\n  sorts: ISort<UserSortField>[]\n): Promise<IUserGetAction> => {\n  const sort = _.chain(sorts)\n    .map((sort) => `${sort.field}%20${sort.dir}`)\n    .join(\",\")\n    .value();\n  const created_at = Boolean(filter.created_at_start && filter.created_at_end)\n    ? `${filter.created_at_start},${filter.created_at_end}`\n    : undefined;\n  const params = _.pickBy(\n    {\n      ...pagination,\n      ..._.omit(filter, [\"created_at_start\", \"created_at_end\"]),\n      created_at,\n    },\n    (val) => val\n  );\n  const response = await kerokehApi().get(`${PRIMARY_ROUTE}?sort=${sort}`, {\n    params,\n  });\n  const users = response.data.data;\n  const meta = response.data.meta;\n  return {\n    type: EUserActionTypes.USER_GET,\n    users,\n    realTotal: meta.total,\n  };\n};\n","export const PRIMARY_ROUTE = \"/admin/user\"\nexport const SECONDARY_ROUTE = \"/admin/shipping-address\"\n","import { Reducer } from \"redux\";\nimport { EUserActionTypes, IUserState, UserActionType } from \"./types\";\n\nconst initialState: IUserState = {\n  users: [],\n  realTotal: 0\n};\n\nconst reducer: Reducer<IUserState, UserActionType> = (\n  state = initialState,\n  action: UserActionType\n): IUserState => {\n  switch (action.type) {\n    case EUserActionTypes.USER_GET: {\n      const users = action.users;\n      return {\n        ...state,\n        users,\n        realTotal: action.realTotal\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport { reducer as userReducer };\n","import { combineReducers } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\nimport { authReducer } from \"./auth\";\nimport { favoriteReducer } from \"./favorite\";\nimport { userReducer } from \"./user\";\n\n// Whenever an action is dispatched, Redux will update each top-level application state property\n// using the reducer with the matching name. It's important that the names match exactly, and that\n// the reducer acts on the corresponding ApplicationState property type.\nexport const rootReducer = combineReducers({\n  auth: authReducer,\n  favorie: favoriteReducer,\n  user: userReducer,\n  form: formReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport default styled(Link)`\n  color: inherit;\n  text-decoration: none;\n\n  &:hover {\n    color: inherit;\n  }\n`;\n","export const goPromise = async <T>(promise :Promise<T>) : Promise<[any, T | undefined]> => {\n    try {\n        const res = await promise;\n        return [null, res];\n    } catch (error) {\n        return [error, undefined];\n    }\n}\n\n","import _ from \"lodash\";\nimport React from \"react\";\nimport {\n  ListItemIcon,\n  ListItemText,\n  ListItem,\n  List,\n  Typography,\n  Button,\n  CircularProgress,\n  ListItemSecondaryAction,\n  IconButton,\n} from \"@material-ui/core\";\nimport {\n  Contactless as ContactlessIcon,\n  Delete as DeleteIcon,\n} from \"@material-ui/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useSnackbar } from \"material-ui-snackbar-provider\";\nimport { goPromise } from \"src/util/helper\";\nimport {\n  getFavorites,\n  IFavoriteGetAction,\n  IFavorite,\n  setPlayingFavorite,\n} from \"src/store/favorite\";\nimport { RootState } from \"src/store\";\n\ninterface IProps {\n  setDrawerOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nfunction formatDuration(duration: number): string {\n  let hh = `${Math.floor(duration / 60)}`;\n  if (hh.length < 2) hh = \"0\" + hh;\n  let mm = `${duration % 60}`;\n  if (mm.length < 2) hh = \"0\" + mm;\n  return `${hh}:${mm}`;\n}\n\nexport default function MenuList({ setDrawerOpen }: IProps) {\n  const snackbar = useSnackbar();\n\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(\"\");\n  const dispatch = useDispatch();\n\n  const fetch = React.useCallback(async () => {\n    setError(\"\");\n    setLoading(true);\n    const [err, res] = await goPromise<IFavoriteGetAction>(getFavorites());\n    console.log(res.favorites);\n\n    setLoading(false);\n    if (err) {\n      console.log({ err });\n      setError(\"error\");\n    } else {\n      dispatch(res);\n    }\n  }, [dispatch]);\n\n  const favorites = useSelector<RootState, IFavorite[]>(\n    (state) => state.favorie.favorites\n  );\n\n  React.useEffect(() => {\n    fetch();\n  }, []);\n\n  return loading ? (\n    <div style={{ textAlign: \"center\" }}>\n      <CircularProgress size={24} /> Loading...\n    </div>\n  ) : error ? (\n    <div>\n      <Typography variant=\"subtitle1\" color=\"secondary\" align=\"center\">\n        Something went wrong.\n      </Typography>\n      <Button onClick={fetch} style={{ color: \"lightblue\" }}>\n        retry\n      </Button>\n    </div>\n  ) : (\n    <List>\n      {favorites.map((fav) => (\n        <ListItem\n          button\n          key={fav.id}\n          onClick={() => {\n            dispatch(setPlayingFavorite(fav));\n            setDrawerOpen(false);\n          }}\n        >\n          <ListItemIcon>\n            <ContactlessIcon />\n          </ListItemIcon>\n          <ListItemText\n            primary={fav.song.title}\n            secondary={formatDuration(fav.song.duration)}\n          />\n          {/* <ListItemSecondaryAction>\n            <IconButton edge=\"end\" aria-label=\"delete\">\n              <DeleteIcon />\n            </IconButton>\n          </ListItemSecondaryAction> */}\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","import React, { ReactNode } from \"react\";\n\nconst useChildProps = (children: ReactNode = [], whitelist: string[]) => {\n  return React.useMemo(\n    () =>\n      [].concat(children).reduce((childProps, child) => {\n        if (whitelist && !whitelist.includes(child.type)) {\n          throw Error(`element <${child.type}> is not supported`);\n        }\n\n        childProps[child.type] = child.props;\n\n        return childProps;\n      }, {}),\n    [children, whitelist]\n  );\n};\n\nexport default useChildProps;\n","import React, { ReactNode } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog, { DialogProps } from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useChildProps from \"src/hooks/useChildren\";\n\ninterface IProps extends DialogProps {\n  dismiss: () => undefined | any; // the dismiss method to use to dismiss the dialog\n  noCallback?: () => any; // the callback for no button\n  yesCallback?: (dismiss: () => any) => any; // the callback for yes button\n  bgClose?: boolean; // whether enable dismiss by clicking background\n  noText?: string; // no button text\n  yesText?: string; // yes button text\n  showNoAction?: boolean; // whether show the no button\n  showYesAction?: boolean; // whether show the yes button\n  children?: ReactNode; // children\n}\n\nconst BasicDialog = (props: IProps) => {\n  const childProps = useChildProps(props.children, [\n    \"title\",\n    \"details\",\n    \"section\"\n  ]);\n\n  const handleCancel = () => {\n    const { dismiss, noCallback } = props;\n    if (noCallback) {\n      noCallback();\n    }\n    dismiss();\n  };\n\n  const handleOkay = () => {\n    const { dismiss, yesCallback } = props;\n    if (yesCallback) {\n      yesCallback(dismiss);\n    }\n  };\n\n  const {\n    noText,\n    yesText,\n    showNoAction,\n    showYesAction,\n    bgClose,\n    open,\n    dismiss,\n    ...restProps\n  } = props;\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={bgClose ? handleCancel : null}\n        {...restProps}\n      >\n        <DialogTitle>\n          {childProps.title && <div {...childProps.title} />}\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            {childProps.details && <span {...childProps.details} />}\n          </DialogContentText>\n          {childProps.section && <div {...childProps.section} />}\n        </DialogContent>\n\n        <DialogActions>\n          {showNoAction || noText ? (\n            <Button onClick={handleCancel} color=\"primary\">\n              {noText || \"Cancel\"}\n            </Button>\n          ) : null}\n          {showYesAction || yesText ? (\n            <Button onClick={handleOkay} color=\"primary\" autoFocus>\n              {yesText || \"Okay\"}\n            </Button>\n          ) : null}\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default BasicDialog;\n","import React from \"react\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nconst MainDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border: 2px solid cornflowerblue;\n  border-radius: 5px;\n  padding: 0.5rem;\n`;\n\nfunction checkExtension(\n  pExt: string,\n  extensions: null | undefined | string[]\n): boolean {\n  if (!extensions) return true;\n  for (let ext of extensions) {\n    if (pExt.toLowerCase().endsWith(\".\" + ext.toLowerCase())) return true;\n  }\n  return false;\n}\n\nfunction checkSize(size: number, maxSize: number) {\n  if (!maxSize) return true;\n  return size <= maxSize;\n}\n\ninterface IComponentProps {\n  label: string;\n  value: any;\n  onChange: (event: any) => void;\n  accept?: string;\n  extensions?: string[];\n  maxSize?: number;\n}\n\nexport default function (props: IComponentProps) {\n  const { label, value, onChange, accept, extensions, maxSize } = props;\n\n  const inputRef = React.useRef(null);\n\n  const [errors, setErrors] = React.useState<string[]>([]);\n\n  const realOnChange = React.useCallback(\n    (event: any) => {\n      setErrors([]);\n      const newErrors: string[] = [];\n\n      const file = event.target.files[0];\n      if (!file) return;\n\n      if (!checkExtension(file.name, extensions)) {\n        newErrors.push(\"invalid extension\");\n      }\n      if (!checkSize(file.size, maxSize)) {\n        newErrors.push(\"file size exceeded\");\n      }\n      setErrors(newErrors);\n\n      if (!newErrors.length) onChange(file);\n      inputRef.current.value = \"\";\n    },\n    [onChange, extensions, maxSize]\n  );\n\n  const onClick = React.useCallback(() => {\n    if (inputRef && inputRef.current) inputRef.current.click();\n  }, [inputRef]);\n\n  return (\n    <>\n      <input\n        ref={inputRef}\n        accept={accept || \"\"}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        onChange={realOnChange}\n      />\n      <div>\n        <Typography variant=\"body1\">\n          {label} ({extensions.join(\", \")})\n        </Typography>\n        <MainDiv>\n          <Button onClick={onClick}>Choose File</Button>\n        </MainDiv>\n        {Boolean(errors.length) && (\n          <Typography variant=\"subtitle2\">{errors.join(\", \")}</Typography>\n        )}\n      </div>\n    </>\n  );\n}\n","import _ from \"lodash\";\nimport React from \"react\";\nimport {\n  Button,\n  CircularProgress,\n  Typography,\n  MenuItem,\n  LinearProgress,\n} from \"@material-ui/core\";\nimport { useSnackbar } from \"material-ui-snackbar-provider\";\n\nimport { goPromise } from \"src/util/helper\";\nimport BasicDialog from \"src/components/generic/dialog/BasicDialog\";\nimport { createFavorite } from \"src/store/favorite\";\nimport ImageInput from \"src/components/generic/input/ImageInput\";\nimport Bounce from \"react-reveal/Bounce\";\n\ninterface IComponentProps {\n  open: boolean;\n  dismiss: () => void;\n  refresh: () => void;\n}\n\nfunction CreateDialog(props: IComponentProps) {\n  const { open, dismiss, refresh } = props;\n\n  const snackbar = useSnackbar();\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const [error, setError] = React.useState<string>(\"\");\n  const [file, setFile] = React.useState<File>(null);\n  const [completed, setCompleted] = React.useState<number>(0);\n\n  const handleSave = React.useCallback(\n    async (e) => {\n      e.preventDefault();\n      setLoading(true);\n      const [err] = await goPromise(createFavorite(file));\n      setLoading(false);\n      if (err) {\n        console.log(err);\n        setError(\"error\");\n      } else {\n        dismiss();\n        refresh();\n        snackbar.showMessage(\"Song added to Library.\");\n      }\n    },\n    [dismiss, snackbar, file]\n  );\n\n  const handleClose = () => {\n    dismiss();\n  };\n\n  // React.useEffect(() => {\n  //   if (loading) {\n  //     const interval = setInterval(() => {\n  //       const unit = 95 / 65;\n  //       setCompleted(Math.max(completed + unit, 95));\n  //     }, 1000);\n  //     return () => {\n  //       clearInterval(interval);\n  //     };\n  //   }\n  // }, [loading, completed]);\n\n  return (\n    <div>\n      <BasicDialog\n        open={open}\n        dismiss={dismiss}\n        maxWidth=\"xs\"\n        fullWidth\n        bgClose={!loading}\n      >\n        <title>Add New Song</title>\n        <section>\n          <form onSubmit={handleSave}>\n            <>\n              <Bounce top when={!loading} collapse>\n                <>\n                  <ImageInput\n                    label=\"Song\"\n                    accept=\".mp3\"\n                    extensions={[\"mp3\"]}\n                    value={file}\n                    onChange={(file) => {\n                      setFile(file);\n                      console.log(file);\n                    }}\n                    maxSize={8000000}\n                  />\n                  {Boolean(file) && (\n                    <Typography variant=\"subtitle1\">\n                      Filename: {file.name}\n                    </Typography>\n                  )}\n\n                  {error && (\n                    <Typography variant=\"subtitle1\">\n                      Something is wrong. Please try again.\n                    </Typography>\n                  )}\n                </>\n              </Bounce>\n\n              <Bounce top when={loading} collapse>\n                <>\n                  <img\n                    alt=\"\"\n                    src={\n                      \"https://i.pinimg.com/originals/97/e9/42/97e942ce7fc4e9d4ea6d844a382f251f.gif\"\n                    }\n                    style={{ width: \"100%\" }}\n                  />\n                  <LinearProgress variant=\"indeterminate\" value={completed} />\n                </>\n              </Bounce>\n\n              <br />\n              <div style={{ textAlign: \"right\" }}>\n                <Button onClick={handleClose} disabled={loading}>\n                  Cancel\n                </Button>\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  disabled={loading || !Boolean(file)}\n                >\n                  {loading ? <CircularProgress size={24} /> : \"Add\"}\n                </Button>\n              </div>\n            </>\n          </form>\n        </section>\n      </BasicDialog>\n    </div>\n  );\n}\n\nexport default CreateDialog;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Drawer,\n  Divider,\n  Typography,\n  Button,\n  // IconButton,\n} from \"@material-ui/core\";\n// import { Add as AddIcon } from \"@material-ui/icons\";\n\nimport MenuList from \"./MenuList\";\nimport styled from \"styled-components\";\nimport CreateDialog from \"./CreateDialog\";\nimport { useDispatch } from \"react-redux\";\nimport { goPromise } from \"src/util/helper\";\nimport { IFavoriteGetAction, getFavorites } from \"src/store/favorite\";\n\nconst useStyles = makeStyles({\n  list: {\n    width: 400,\n  },\n});\n\nconst BigText = styled(Typography)`\n  padding: 1rem;\n`;\n\ninterface IProps {\n  drawerOpen: boolean;\n  setDrawerOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport default function TemporaryDrawer(props: IProps) {\n  const classes = useStyles({});\n\n  const dispatch = useDispatch();\n  const { drawerOpen, setDrawerOpen } = props;\n  const [createDialogOpen, setCreateDialogOpen] = React.useState<boolean>(\n    false\n  );\n\n  const silentFetch = React.useCallback(async () => {\n    const [err, res] = await goPromise<IFavoriteGetAction>(getFavorites());\n    if (err) {\n      console.log({ err });\n    } else {\n      dispatch(res);\n    }\n  }, [dispatch]);\n\n  const sideList = (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onKeyDown={() => setDrawerOpen(false)}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          paddingRight: \"1rem\",\n        }}\n      >\n        <BigText variant=\"h6\">Song Library</BigText>\n        {/* <IconButton color=\"primary\">\n          <AddIcon />\n        </IconButton> */}\n      </div>\n      <Divider />\n      <div style={{ padding: \"0.5rem\" }}>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          fullWidth\n          onClick={() => setCreateDialogOpen(true)}\n        >\n          Add Song\n        </Button>\n      </div>\n      <MenuList setDrawerOpen={setDrawerOpen} />\n    </div>\n  );\n\n  return (\n    <>\n      <Drawer\n        anchor=\"left\"\n        open={drawerOpen}\n        keepMounted\n        onClose={() => setDrawerOpen(false)}\n      >\n        {sideList}\n      </Drawer>\n      {Boolean(createDialogOpen) && (\n        <CreateDialog\n          open={createDialogOpen}\n          dismiss={() => setCreateDialogOpen(false)}\n          refresh={() => silentFetch()}\n        />\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  MenuItem,\n  Menu,\n} from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  AccountCircle as AccountCircleIcon,\n} from \"@material-ui/icons\";\n\nimport Link from \"../../generic/Link\";\nimport MyDrawer from \"./MyDrawer\";\nimport \"src/components/main/Auth/style.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: \"block\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n}));\n\nexport default function PrimarySearchAppBar() {\n  const classes = useStyles({});\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [drawerOpen, setDrawerOpen] = React.useState<boolean>(false);\n\n  const isMenuOpen = Boolean(anchorEl);\n\n  const handleProfileMenuOpen = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): void => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = (): void => {\n    setAnchorEl(null);\n  };\n\n  const menuId = \"primary-search-account-menu\";\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"fixed\" color=\"secondary\">\n        <Toolbar>\n          <IconButton\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={() => setDrawerOpen(!drawerOpen)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            className={classes.title}\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n          >\n            <strong className=\"kerokeh-title\">KEROKEH</strong>\n          </Typography>\n\n          <div className={classes.grow} />\n          <div>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircleIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Menu\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        id={menuId}\n        keepMounted\n        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        open={isMenuOpen}\n        onClose={handleMenuClose}\n      >\n        <MenuItem onClick={handleMenuClose}>\n          <Link to=\"/logout\">Logout</Link>\n        </MenuItem>\n      </Menu>\n      <MyDrawer drawerOpen={drawerOpen} setDrawerOpen={setDrawerOpen} />\n    </div>\n  );\n}\n","import _ from \"lodash\";\nimport \"date-fns\";\nimport React from \"react\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\n\ninterface IComponentProps {\n  label: string;\n  value: Date;\n  onChange: (date: Date) => any;\n  disabled?: boolean;\n  inputVariant?: \"standard\" | \"outlined\" | \"filled\";\n  fullWidth?: boolean;\n}\n\nexport default function DatePicker({\n  label,\n  value,\n  onChange,\n  disabled = false,\n  inputVariant = \"standard\",\n  fullWidth\n}: IComponentProps) {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <KeyboardDatePicker\n        id={_.snakeCase(label)}\n        label={label}\n        format=\"dd/MM/yyyy\"\n        value={value}\n        inputVariant={inputVariant}\n        disabled={disabled}\n        onChange={onChange}\n        fullWidth={Boolean(fullWidth)}\n      />\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React from \"react\";\nimport {\n  TextField,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  FormControlLabel,\n  Switch\n} from \"@material-ui/core\";\n\nimport {\n  RenderFieldFn,\n  RenderAutoSuggestFieldFn,\n  RenderAsyncAutoSuggestFieldFn\n} from \"src/util/types\";\nimport ReactSelect from \"react-select\";\nimport AsyncReactSelect from \"react-select/async\";\nimport moment from \"moment\";\nimport DatePicker from \"src/components/generic/input/DatePicker\";\nimport ImageInput from \"src/components/generic/input/ImageInput\";\n\nexport const renderTextField: RenderFieldFn = ({\n  input,\n  label,\n  type,\n  meta: { touched, error },\n  ...custom\n}) => {\n  return (\n    <TextField\n      label={label}\n      placeholder={label}\n      type={type}\n      error={touched && Boolean(error)}\n      helperText={touched && error}\n      fullWidth\n      style={{ marginBottom: \"1rem\" }}\n      {...input}\n      {...custom}\n    />\n  );\n};\n\nexport const renderSelectField: RenderFieldFn = ({\n  input,\n  label,\n  type,\n  meta: { touched, error },\n  children,\n  ...custom\n}) => (\n  <>\n    <FormControl\n      error={touched && Boolean(error)}\n      style={{ width: \"100%\" }}\n      {...custom}\n    >\n      <InputLabel>{label}</InputLabel>\n      <Select {...input} {...custom}>\n        {children}\n      </Select>\n      {touched && Boolean(error) && (\n        <Typography variant=\"caption\">{error}</Typography>\n      )}\n    </FormControl>\n    <br />\n    <br />\n  </>\n);\n\nexport const renderDateField: RenderFieldFn = ({\n  input,\n  label,\n  meta: { touched, error }\n}) => (\n  <div>\n    <DatePicker\n      label={label}\n      onChange={date => input.onChange(moment(date).format(\"YYYY-MM-DD\"))}\n      value={moment(input.value, \"YYYY-MM-DD\").toDate()}\n      fullWidth\n    />\n    {touched && Boolean(error) && (\n      <Typography variant=\"caption\">{error}</Typography>\n    )}\n    <br />\n    <br />\n  </div>\n);\n\nexport const renderImageField: RenderFieldFn = ({\n  input,\n  label,\n  meta: { touched, error },\n  accept,\n  extensions\n}) => (\n  <div>\n    <ImageInput\n      label={label}\n      value={input.value}\n      accept={accept}\n      extensions={extensions}\n      onChange={file => {\n        input.onChange(file);\n      }}\n    />\n    {touched && Boolean(error) && (\n      <Typography variant=\"caption\">{error}</Typography>\n    )}\n    <br />\n  </div>\n);\n\nexport const renderAutoSuggestField: RenderAutoSuggestFieldFn = ({\n  input,\n  label,\n  meta: { touched, error },\n  options,\n  disabled,\n  ...rest\n}) => {\n  return (\n    <div>\n      <div>\n        <Typography style={{ color: \"gray\" }} variant=\"body2\">\n          {label}\n        </Typography>\n        <ReactSelect\n          {...rest}\n          {...input}\n          onBlur={value => input.onBlur()}\n          placeholder={label}\n          options={options}\n        />\n        {touched && Boolean(error) && (\n          <Typography variant=\"caption\">{error}</Typography>\n        )}\n        <br />\n        <br />\n      </div>\n    </div>\n  );\n};\n\nexport const renderAsyncAutoSuggestField: RenderAsyncAutoSuggestFieldFn = ({\n  input,\n  label,\n  meta: { touched, error },\n  promiseOptions,\n  disabled,\n  ...rest\n}) => {\n  return (\n    <div>\n      <div>\n        <Typography style={{ color: \"gray\" }} variant=\"body2\">\n          {label}\n        </Typography>\n        <AsyncReactSelect\n          {...rest}\n          {...input}\n          isDisabled={disabled || false}\n          cacheOptions\n          defaultOptions\n          loadOptions={promiseOptions}\n          onBlur={() => input.onBlur()}\n          placeholder={label}\n        />\n        {touched && Boolean(error) && (\n          <Typography variant=\"caption\">{error}</Typography>\n        )}\n        <br />\n      </div>\n    </div>\n  );\n};\n\nexport const renderSwitchField: RenderFieldFn = ({\n  input,\n  label,\n  type,\n  meta: { touched, error },\n  ...custom\n}) => {\n  return (\n    <>\n      <FormControlLabel\n        control={\n          <Switch size=\"small\" checked={input.value} {...input} {...custom} />\n        }\n        label={label}\n      />\n      {touched && Boolean(error) && (\n        <Typography variant=\"caption\">{error}</Typography>\n      )}\n    </>\n  );\n};\n\nexport const renderErrorMessage: RenderFieldFn = ({\n  input,\n  label,\n  type,\n  meta: { touched, error },\n  ...custom\n}) => {\n  return (\n    <>{Boolean(error) && <Typography variant=\"caption\">{error}</Typography>}</>\n  );\n};\n","export const requiredValidator = (value: any): any =>\n  value || typeof value === \"number\" ? undefined : \"Required\";\n\nexport const realNumberValidator = (value: any): any =>\n  /^-?\\d+(\\.\\d+)?$/.test(value) ? undefined : \"Invalid Real Number Format\";\n\nexport const unsignedRealNumberValidator = (value: any): any =>\n  /^\\d+(\\.\\d+)?$/.test(value) ? undefined : \"Invalid Real Number Format\";\n\nexport const wholeNumberValidator = (value: any): any =>\n  /^-?\\d+$/.test(value) ? undefined : \"Invalid Whole Number Format\";\n\nexport const unsignedWholeNumberValidator = (value: any): any =>\n  /^\\d+$/.test(value) ? undefined : \"Invalid Whole Number Format\";\n\nexport const nonZeroWholeNumberValidator = (value: any): any =>\n  value === \"0\"\n    ? \"Cannot be zero\"\n    : /^-?\\d+$/.test(value)\n    ? undefined\n    : \"Invalid Whole Number Format\";\n","import _ from \"lodash\";\nimport React from \"react\";\nimport { Button, Typography, CircularProgress } from \"@material-ui/core\";\n\nimport BasicDialog from \"src/components/generic/dialog/BasicDialog\";\nimport { reduxForm, InjectedFormProps, Field } from \"redux-form\";\nimport { ISignInAction, signIn } from \"src/store/auth\";\nimport { goPromise } from \"src/util/helper\";\nimport { useSnackbar } from \"material-ui-snackbar-provider\";\nimport { renderTextField } from \"src/redux-form/renderers\";\nimport { requiredValidator } from \"src/redux-form/validators\";\nimport { useDispatch } from \"react-redux\";\n\nimport \"../style.css\";\n\ninterface IComponentProps {\n  open: boolean;\n  dismiss: () => void;\n}\n\ninterface IFormProps {\n  email: string;\n  password: string;\n}\n\nfunction LoginDialog(\n  props: IComponentProps & InjectedFormProps<IFormProps, IComponentProps>\n) {\n  const { handleSubmit } = props;\n  const snackbar = useSnackbar();\n\n  const { open, dismiss } = props;\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(\"\");\n  const dispatch = useDispatch();\n\n  const onSubmit = async (credentials: { email: string; password: string }) => {\n    setLoading(true);\n    const [err, res] = await goPromise<ISignInAction>(signIn(credentials));\n    setLoading(false);\n    if (err) {\n      setError(_.get(err, \"response.data.errors\", \"Check your connection.\"));\n    } else {\n      dispatch(res);\n      snackbar.showMessage(\"Logged In successfully.\");\n    }\n  };\n\n  return (\n    <div>\n      <BasicDialog\n        open={open}\n        dismiss={dismiss}\n        maxWidth=\"xs\"\n        fullWidth\n        bgClose\n      >\n        <title>\n          <Typography align=\"center\" variant=\"h6\">\n            Login to{\" \"}\n            <span className=\"kerokeh-title\">\n              <strong>KEROKEH</strong>\n            </span>\n          </Typography>\n        </title>\n        <section>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <Field\n              name=\"email\"\n              type=\"email\"\n              component={renderTextField}\n              label=\"Email\"\n              validate={[requiredValidator]}\n              disabled={loading}\n            />\n            <Field\n              name=\"password\"\n              type=\"password\"\n              component={renderTextField}\n              label=\"Password\"\n              validate={[requiredValidator]}\n              disabled={loading}\n            />\n            {error && (\n              <Typography variant=\"subtitle2\" style={{ color: \"red\" }}>\n                {error}\n              </Typography>\n            )}\n\n            <br />\n            <br />\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={loading}\n              fullWidth\n            >\n              {loading ? <CircularProgress size={24} /> : \"LOGIN\"}\n            </Button>\n          </form>\n        </section>\n      </BasicDialog>\n    </div>\n  );\n}\n\nexport default reduxForm<IFormProps, IComponentProps>({\n  form: \"loginForm\",\n})(LoginDialog);\n","import _ from \"lodash\";\nimport React from \"react\";\nimport { Button, Typography, CircularProgress } from \"@material-ui/core\";\n\nimport BasicDialog from \"src/components/generic/dialog/BasicDialog\";\nimport { reduxForm, InjectedFormProps, Field } from \"redux-form\";\nimport { ISignUpAction, signUp } from \"src/store/auth\";\nimport { goPromise } from \"src/util/helper\";\nimport { useSnackbar } from \"material-ui-snackbar-provider\";\nimport { renderTextField } from \"src/redux-form/renderers\";\nimport { requiredValidator } from \"src/redux-form/validators\";\nimport { useDispatch } from \"react-redux\";\n\nimport \"../style.css\";\n\ninterface IComponentProps {\n  open: boolean;\n  dismiss: () => void;\n}\n\ninterface IFormProps {\n  name: string;\n  email: string;\n  password: string;\n}\n\nfunction SignUpDialog(\n  props: IComponentProps & InjectedFormProps<IFormProps, IComponentProps>\n) {\n  const { handleSubmit } = props;\n  const snackbar = useSnackbar();\n\n  const { open, dismiss } = props;\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(\"\");\n  const dispatch = useDispatch();\n\n  const onSubmit = async (credentials: {\n    name: string;\n    email: string;\n    password: string;\n  }) => {\n    setLoading(true);\n    const [err, res] = await goPromise<ISignUpAction>(signUp(credentials));\n    setLoading(false);\n    if (err) {\n      setError(_.get(err, \"response.data.errors\", \"Check your connection.\"));\n    } else {\n      dispatch(res);\n      snackbar.showMessage(\"Signed Up successfully.\");\n    }\n  };\n\n  return (\n    <div>\n      <BasicDialog\n        open={open}\n        dismiss={dismiss}\n        maxWidth=\"xs\"\n        fullWidth\n        bgClose\n      >\n        <title>\n          <Typography align=\"center\" variant=\"h6\">\n            Sign Up for{\" \"}\n            <span className=\"kerokeh-title\">\n              <strong>KEROKEH</strong>\n            </span>\n          </Typography>\n        </title>\n        <section>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <Field\n              name=\"name\"\n              type=\"text\"\n              component={renderTextField}\n              label=\"Fullname\"\n              validate={[requiredValidator]}\n              disabled={loading}\n            />\n            <Field\n              name=\"email\"\n              type=\"email\"\n              component={renderTextField}\n              label=\"Email\"\n              validate={[requiredValidator]}\n              disabled={loading}\n            />\n            <Field\n              name=\"password\"\n              type=\"password\"\n              component={renderTextField}\n              label=\"Password\"\n              validate={[requiredValidator]}\n              disabled={loading}\n            />\n            {error && (\n              <Typography variant=\"subtitle2\" style={{ color: \"red\" }}>\n                {error}\n              </Typography>\n            )}\n            <br />\n            <br />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={loading}\n              fullWidth\n            >\n              {loading ? <CircularProgress size={24} /> : \"SIGN UP\"}\n            </Button>\n          </form>\n        </section>\n      </BasicDialog>\n    </div>\n  );\n}\n\nexport default reduxForm<IFormProps, IComponentProps>({\n  form: \"signUpForm\",\n})(SignUpDialog);\n","import React from \"react\";\nimport { Grid, Typography, Button } from \"@material-ui/core\";\nimport VideoPlayer from \"react-background-video-player\";\nimport LoginDialog from \"../dialogs/LoginDialog\";\nimport BgVideo from \"src/media/bg.mp4\";\nimport \"../style.css\";\nimport SignUpDialog from \"../dialogs/SignUpDialog\";\n\nconst Login = () => {\n  const [windowWidth, setWindowWidth] = React.useState<number>(\n    window.innerWidth\n  );\n  const [windowHeight, setWindowHeight] = React.useState<number>(\n    window.innerHeight\n  );\n  const [loginDialogOpen, setLoginDialogOpen] = React.useState<boolean>(false);\n  const [signUpDialogOpen, setSignUpDialogOpen] = React.useState<boolean>(\n    false\n  );\n  const player = React.useRef();\n\n  const handleResize = React.useCallback(() => {\n    setWindowWidth(window.innerWidth);\n    setWindowHeight(window.innerHeight);\n  }, []);\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [handleResize]);\n\n  return (\n    <>\n      <VideoPlayer\n        ref={(p: any) => (player.current = p)}\n        containerWidth={windowWidth}\n        containerHeight={windowHeight}\n        src={[\n          {\n            src: BgVideo,\n            type: \"video/mp4\",\n          },\n        ]}\n        poster={\n          \"https://cdn2.tstatic.net/kaltim/foto/bank/images/comeback-mv-twice-fancy-dirilis-lirik-lagu-dan-terjemahannya-dalam-bahasa-indonesia.jpg\"\n        }\n        autoPlay\n        muted\n        loop\n        style={{\n          zIndex: -5,\n        }}\n      />\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ width: \"100vw\", height: \"100vh\", zIndex: 2 }}\n      >\n        <Grid item xs={11} sm={11} md={11} lg={11}>\n          <Typography\n            variant=\"h1\"\n            className=\"kerokeh-title\"\n            style={{ letterSpacing: \"1.5rem\" }}\n          >\n            <strong>KEROKEH</strong>\n          </Typography>\n\n          <br />\n\n          <Typography variant=\"h6\" align=\"center\" style={{ color: \"white\" }}>\n            Sing off your passion!\n          </Typography>\n\n          <br />\n\n          <div style={{ textAlign: \"center\" }}>\n            <Button\n              color=\"primary\"\n              variant=\"outlined\"\n              style={{ borderWidth: \"2px\" }}\n              onClick={() => setLoginDialogOpen(true)}\n            >\n              Log In\n            </Button>\n            &nbsp; &nbsp; &nbsp;\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={() => setSignUpDialogOpen(true)}\n            >\n              Sign Up\n            </Button>\n          </div>\n        </Grid>\n      </Grid>\n\n      {Boolean(loginDialogOpen) && (\n        <LoginDialog\n          open={loginDialogOpen}\n          dismiss={() => setLoginDialogOpen(false)}\n        />\n      )}\n      {Boolean(signUpDialogOpen) && (\n        <SignUpDialog\n          open={signUpDialogOpen}\n          dismiss={() => setSignUpDialogOpen(false)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSnackbar } from \"material-ui-snackbar-provider\";\n\nimport { signOut } from \"src/store/auth\";\nimport { EFavoriteActionTypes } from \"src/store/favorite\";\n\nconst Logout: React.FC = () => {\n  const dispatch = useDispatch();\n  const snackbar = useSnackbar();\n\n  React.useEffect(() => {\n    dispatch(signOut());\n    dispatch({\n      type: EFavoriteActionTypes.FAVORITE_GET,\n      favorites: [],\n    });\n    dispatch({\n      type: EFavoriteActionTypes.FAVORITE_PLAYING_SET,\n      favorite: null,\n    });\n    snackbar.showMessage(\"Logged Out successfully.\");\n  }, [dispatch, snackbar]);\n\n  return null;\n};\n\nexport default Logout;\n","import styled from \"styled-components\";\nimport { Typography, TableCell } from \"@material-ui/core\";\n\nexport const Title = styled(Typography)`\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  white-space: normal;\n  width: 35vw;\n`;\n\nexport const Entry = styled.div`\n  display: flex;\n  margin-bottom: 1rem;\n`;\n\nexport const Label = styled.div`\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  white-space: normal;\n  width: 25%;\n  min-width: 25%;\n  flex-basis: 25%;\n  margin-right: 0.8rem;\n`;\n\nexport const Value = styled.div`\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  white-space: normal;\n  width: 75%;\n  min-width: 75%;\n  flex-basis: 75%;\n`;\n\nexport const HeaderTableCellDiv = styled.div`\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n  white-space: normal;\n  width: 100%;\n`;\n\nexport const BodyTableCell = styled(TableCell)`\n  word-wrap break-word;\n  overflow-wrap: break-word;\n  white-space: normal;\n  max-width: 1px;\n`;\n","import React from \"react\";\nimport { useFilters, useSortBy, useTable, usePagination } from \"react-table\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TablePagination,\n  Hidden,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails\n} from \"@material-ui/core\";\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\nimport {\n  Title,\n  Entry,\n  Label,\n  Value,\n  BodyTableCell,\n  HeaderTableCellDiv\n} from \"./table-components\";\n\ninterface IComponentProps {\n  columns: any[];\n  data: any[];\n  rowCount: number;\n  onPaginationChange: OnPaginationChangeFn;\n  disableSorting?: boolean;\n  pageIndex: number;\n  pageSize: number;\n}\n\nexport type OnPaginationChangeFn = (\n  pageIndex: number,\n  pageSize: number\n) => void;\n\nconst makeHeaderTableCell = (column: any, key: number) => {\n  return (\n    <TableCell style={{ maxWidth: \"1px\" }} key={key}>\n      <HeaderTableCellDiv>{column.render(\"Header\")}</HeaderTableCellDiv>\n    </TableCell>\n  );\n};\n\nconst makeBodyTableCell = (cell: any, key: number) => {\n  return (\n    <BodyTableCell {...cell.getCellProps()} key={key}>\n      {cell.render(\"Cell\")}\n    </BodyTableCell>\n  );\n};\n\n// Our table component\nfunction ReactTableSSR({\n  columns,\n  data,\n  rowCount,\n  onPaginationChange,\n  disableSorting,\n  pageIndex,\n  pageSize\n}: IComponentProps) {\n  const defaultColumn = React.useMemo(\n    () => ({\n      Filter: null\n    }),\n    []\n  );\n\n  const onPaginationChangeRef = React.useRef(null);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n\n    // pagination shits\n    page\n    // gotoPage,\n    // setPageSize\n  } = useTable(\n    {\n      columns,\n      data: (data as unknown) as object[],\n      defaultColumn, // Be sure to pass the defaultColumn option,\n      initialState: { pageIndex: 0, pageSize: 5 },\n      manualPagination: true,\n      pageCount: Math.ceil(rowCount / 5),\n      disableSorting\n    },\n    useFilters,\n    useSortBy,\n    usePagination\n  );\n\n  // call pagination listener on pagination change\n  const handleChangePage = React.useCallback(\n    (\n      event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n      newPage: number\n    ): void => {\n      onPaginationChangeRef.current(newPage, pageSize);\n    },\n    [pageSize]\n  );\n  const handleChangeRowsPerPage = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>): void => {\n      const newPageSize = parseInt(event.target.value, 10);\n      onPaginationChangeRef.current(pageIndex, newPageSize);\n    },\n    [pageIndex]\n  );\n\n  // update pagination state based on props\n  // React.useEffect(() => {\n  //   gotoPage(pageIndex || 0);\n  // }, [gotoPage, pageIndex]);\n  // React.useEffect(() => {\n  //   setPageSize(pageSize || 5);\n  // }, [setPageSize, pageSize]);\n\n  // Listen for changes in pagination handler\n  React.useEffect(() => {\n    onPaginationChangeRef.current = onPaginationChange;\n  }, [onPaginationChange]);\n\n  return (\n    <>\n      <Table {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map((headerGroup: any, index) => (\n            <TableRow key={index} {...headerGroup.getHeaderGroupProps()}>\n              <Hidden mdDown>\n                {headerGroup.headers.map((column: any, index: number) =>\n                  makeHeaderTableCell(column, index)\n                )}\n              </Hidden>\n              <Hidden lgUp>\n                <TableCell style={{ maxWidth: \"1px\" }}>&nbsp;</TableCell>\n              </Hidden>\n            </TableRow>\n          ))}\n        </TableHead>\n        <TableBody {...getTableBodyProps()}>\n          {page.map((row: any, index: number): any => {\n            prepareRow(row);\n            return (\n              <TableRow {...row.getRowProps()} key={index}>\n                <Hidden smDown key={0}>\n                  {row.cells.map((cell: any, index: number) =>\n                    makeBodyTableCell(cell, index)\n                  )}\n                </Hidden>\n                <Hidden mdUp key={1}>\n                  <TableCell style={{ maxWidth: \"1px\" }}>\n                    <ExpansionPanel style={{ width: \"100%\" }}>\n                      <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        style={{ flexGrow: 1 }}\n                      >\n                        <Title>\n                          {Boolean(row.cells[0]) && row.cells[0].render(\"Cell\")}{\" \"}\n                          {Boolean(row.cells[1]) && (\n                            <span>- {row.cells[1].render(\"Cell\")}</span>\n                          )}\n                        </Title>\n                      </ExpansionPanelSummary>\n                      <ExpansionPanelDetails>\n                        <div style={{ width: \"100%\" }}>\n                          {row.cells.map((cell: any, index: number) => {\n                            return (\n                              <Entry key={index}>\n                                <Label>{cell.column.Header}</Label>\n                                <Value>{cell.render(\"Cell\")}</Value>\n                              </Entry>\n                            );\n                          })}\n                        </div>\n                      </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                  </TableCell>\n                </Hidden>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25, 50, 100]}\n        component=\"div\"\n        count={rowCount}\n        page={pageIndex || 0}\n        rowsPerPage={pageSize || 5}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n        labelRowsPerPage=\"Rows\"\n      />\n    </>\n  );\n}\n\nexport default ReactTableSSR;\n","import React from \"react\";\n\nfunction useIntervalRun(\n  callback: (() => void) | (() => Promise<void>),\n  delay: number\n) {\n  const savedCallback = React.useRef(callback);\n  const runningRef = React.useRef(false);\n  const [running, setRunning] = React.useState<boolean>(false);\n  const lastTimeRef = React.useRef(0);\n  const [lastTime, setLastTime] = React.useState<number>(0);\n  const [alive, setAlive] = React.useState<boolean>(false);\n  const [identity, setIdentity] = React.useState({});\n  const [error, setError] = React.useState<boolean>(false);\n\n  // componentDidMount\n  React.useEffect(() => {\n    return () => {\n      setAlive(false);\n    };\n  }, []);\n\n  // Remember the latest callback.\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the timeout loop.\n  React.useEffect(() => {\n    if (!alive) return;\n\n    let id: number;\n    function tick() {\n      setError(false);\n      let ret;\n      try {\n        ret = savedCallback.current();\n      } catch (error) {\n        setError(true);\n      }\n      if (ret instanceof Promise) {\n        setRunning((runningRef.current = true));\n        ret\n          .catch(() => {\n            setError(true);\n          })\n          .finally(() => {\n            id = setTimeout(tick, delay);\n            setRunning((runningRef.current = false));\n          });\n      } else {\n        id = setTimeout(tick, delay);\n      }\n    }\n    tick();\n    return () => id && clearTimeout(id);\n  }, [delay, alive, identity]);\n\n  // Set up the last time loop.\n  React.useEffect(() => {\n    if (!alive) {\n      return;\n    } else if (running) {\n      setLastTime((lastTimeRef.current = 0));\n      return;\n    }\n\n    function tick() {\n      lastTimeRef.current += 1000;\n      setLastTime(lastTimeRef.current);\n    }\n    let id: number = setInterval(tick, 1000);\n    return () => id && clearInterval(id);\n  }, [running, alive, identity]);\n\n  const restart = React.useCallback(() => {\n    setIdentity({});\n  }, []);\n\n  return React.useMemo(\n    () => ({ running, lastTime, restart, error, setAlive, alive }),\n    [running, lastTime, restart, error, setAlive, alive]\n  );\n}\n\nexport default useIntervalRun;\n","import React from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport useIntervalRun from \"src/hooks/useIntervalRun\";\n\ninterface IComponentProps {\n  intervalRun: ReturnType<typeof useIntervalRun>;\n  refreshDelay: number;\n}\n\nexport default (props: IComponentProps) => {\n  return (\n    <div>\n      {props.intervalRun.running ? (\n        <span>\n          <CircularProgress size={18} /> Updating\n        </span>\n      ) : props.intervalRun.error ? (\n        <span>\n          Retrying in {(props.refreshDelay - props.intervalRun.lastTime) / 1000}{\" \"}\n          second(s).\n        </span>\n      ) : (\n        <span>Updated {props.intervalRun.lastTime / 1000} second(s) ago</span>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport useIntervalRun from \"src/hooks/useIntervalRun\";\nimport IntervalRunStatus from \"src/components/generic/IntervalRunStatus\";\n\ninterface IComponentProps {\n  intervalRun: ReturnType<typeof useIntervalRun>;\n  refreshDelay: number;\n}\n\nconst RootDiv = styled(\"div\")`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport default (props: IComponentProps) => {\n  return (\n    <RootDiv>\n      <div />\n      {/* display auto-updating status */}\n      <IntervalRunStatus\n        intervalRun={props.intervalRun}\n        refreshDelay={props.refreshDelay}\n      />\n    </RootDiv>\n  );\n};\n","import crypto from \"crypto\";\nimport React, { ReactNode } from \"react\";\nimport { FormControl, InputLabel, Select } from \"@material-ui/core\";\n\ninterface IComponentProps {\n  style?: React.CSSProperties;\n  value: string;\n  label: string;\n  onChange: (value: string) => void;\n  children?: ReactNode;\n  disabled?: boolean;\n}\n\nfunction BasicSelect(props: IComponentProps) {\n  const [labelId, setLabelId] = React.useState<string | null>(null);\n\n  const init = React.useCallback(async () => {\n    const labelId = (await crypto.randomBytes(32)).toString();\n    setLabelId(labelId);\n  }, [setLabelId]);\n\n  React.useEffect(() => {\n    init();\n  }, [init]);\n\n  if (!labelId) return null;\n\n  return (\n    <FormControl style={props.style || {}}>\n      <InputLabel id={labelId}>{props.label}</InputLabel>\n      <Select\n        labelId={labelId}\n        value={props.value}\n        onChange={e => props.onChange(String(e.target.value))}\n        disabled={props.disabled || false}\n      >\n        {props.children || null}\n      </Select>\n    </FormControl>\n  );\n}\n\nexport default BasicSelect;\n","import React from \"react\";\nimport { TextField, Typography, MenuItem } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { PUserFilter } from \"src/store/user\";\nimport BasicSelect from \"src/components/generic/input/BasicSelect\";\nimport DatePicker from \"src/components/generic/input/DatePicker\";\nimport moment from \"moment\";\n\ninterface IComponentProps {\n  filter: PUserFilter;\n  updateFilter: (_filter: PUserFilter) => void;\n}\n\nconst Div = styled.div`\n  margin-bottom: 0.5rem;\n`;\n\nfunction FilterForm(props: IComponentProps) {\n  const { filter, updateFilter } = props;\n\n  return (\n    <div>\n      <Typography variant=\"subtitle2\">Filter</Typography>\n\n      <Div>\n        <TextField\n          label=\"Id\"\n          value={filter.id || \"\"}\n          onChange={e => updateFilter({ id: e.target.value })}\n          fullWidth\n        />\n      </Div>\n\n      <Div>\n        <TextField\n          label=\"Username\"\n          value={filter.username || \"\"}\n          onChange={e => updateFilter({ username: e.target.value })}\n          fullWidth\n        />\n      </Div>\n\n      <Div>\n        <TextField\n          label=\"Full Name\"\n          value={filter.full_name || \"\"}\n          onChange={e => updateFilter({ full_name: e.target.value })}\n          fullWidth\n        />\n      </Div>\n\n      <Div>\n        <TextField\n          label=\"Email\"\n          value={filter.email || \"\"}\n          onChange={e => updateFilter({ email: e.target.value })}\n          fullWidth\n        />\n      </Div>\n\n      <Div>\n        <BasicSelect\n          style={{ width: \"100%\" }}\n          label=\"Store Closed\"\n          value={filter.store_closed || \"\"}\n          onChange={(value: string) => updateFilter({ store_closed: value })}\n        >\n          <MenuItem value=\"\">No Filter</MenuItem>\n          <MenuItem value=\"true\">True</MenuItem>\n          <MenuItem value=\"false\">False</MenuItem>\n        </BasicSelect>\n      </Div>\n\n      <Div>\n        <BasicSelect\n          style={{ width: \"100%\" }}\n          label=\"Banned\"\n          value={filter.banned || \"\"}\n          onChange={(value: string) => updateFilter({ banned: value })}\n        >\n          <MenuItem value=\"\">No Filter</MenuItem>\n          <MenuItem value=\"true\">Banned</MenuItem>\n          <MenuItem value=\"false\">Not Banned</MenuItem>\n        </BasicSelect>\n      </Div>\n\n      <Div>\n        <BasicSelect\n          style={{ width: \"100%\" }}\n          label=\"Froze\"\n          value={filter.froze || \"\"}\n          onChange={(value: string) => updateFilter({ froze: value })}\n        >\n          <MenuItem value=\"\">No Filter</MenuItem>\n          <MenuItem value=\"true\">Froze</MenuItem>\n          <MenuItem value=\"false\">Not Froze</MenuItem>\n        </BasicSelect>\n      </Div>\n\n      <Div>\n        <BasicSelect\n          style={{ width: \"100%\" }}\n          label=\"Is Seller\"\n          value={filter.is_seller || \"\"}\n          onChange={(value: string) => updateFilter({ is_seller: value })}\n        >\n          <MenuItem value=\"\">No Filter</MenuItem>\n          <MenuItem value=\"true\">Is Seller</MenuItem>\n          <MenuItem value=\"false\">Is Not Seller</MenuItem>\n        </BasicSelect>\n      </Div>\n\n      <Div>\n        <DatePicker\n          label=\"Join At (Start)\"\n          onChange={date =>\n            updateFilter({\n              created_at_start: moment(date).format(\"YYYY-MM-DD\")\n            })\n          }\n          value={moment(filter.created_at_start, \"YYYY-MM-DD\").toDate()}\n          fullWidth\n        />\n      </Div>\n      <Div>\n        <DatePicker\n          label=\"Join At (End)\"\n          onChange={date =>\n            updateFilter({\n              created_at_end: moment(date).format(\"YYYY-MM-DD\")\n            })\n          }\n          value={moment(filter.created_at_end, \"YYYY-MM-DD\").toDate()}\n          fullWidth\n        />\n      </Div>\n    </div>\n  );\n}\n\nexport default FilterForm;\n","import _ from \"lodash\";\nimport React from \"react\";\nimport { Typography, MenuItem, IconButton } from \"@material-ui/core\";\nimport {\n  Close as CloseIcon,\n  ArrowUpward as ArrowUpwardIcon,\n  ArrowDownward as ArrowDownwardIcon\n} from \"@material-ui/icons\";\nimport styled from \"styled-components\";\nimport BasicSelect from \"src/components/generic/input/BasicSelect\";\nimport { ISort } from \"src/util/types\";\n\ninterface IComponentProps<T> {\n  sorts: ISort<T>[];\n  sortFields: T[];\n  updateSorts: (sorts: ISort<T>[]) => void;\n}\n\nconst Div = styled.div`\n  margin-bottom: 0.75rem;\n  display: flex;\n  align-items: center;\n`;\n\nfunction SortForm<T>({ sorts, sortFields, updateSorts }: IComponentProps<T>) {\n  const usedSortFields = React.useMemo(\n    () => _.mapKeys(sorts, (e: ISort<T>) => e.field),\n    [sorts]\n  );\n\n  const handleAdd = React.useCallback(\n    (value: T) => {\n      const newSorts: ISort<T>[] = [\n        ...sorts,\n        { field: value, dir: \"asc\" } as ISort<T>\n      ];\n      updateSorts(newSorts);\n    },\n    [sorts, updateSorts]\n  );\n\n  const handleReplace = React.useCallback(\n    (index: number, value: T) => {\n      const newSorts: ISort<T>[] = [...sorts];\n      newSorts[index] = {\n        field: value,\n        dir: newSorts[index].dir\n      };\n      updateSorts(newSorts);\n    },\n    [sorts, updateSorts]\n  );\n\n  const handleToggleSort = React.useCallback(\n    (index: number) => {\n      const newSorts: ISort<T>[] = [...sorts];\n      newSorts[index] = {\n        ...newSorts[index],\n        dir: newSorts[index].dir === \"asc\" ? \"desc\" : \"asc\"\n      };\n      updateSorts(newSorts);\n    },\n    [sorts, updateSorts]\n  );\n\n  const handleDelete = React.useCallback(\n    (index: number) => {\n      const newSorts: ISort<T>[] = [\n        ...sorts.slice(0, index),\n        ...sorts.slice(index + 1)\n      ];\n      updateSorts(newSorts);\n    },\n    [sorts, updateSorts]\n  );\n\n  return (\n    <div>\n      <Typography variant=\"subtitle2\">Sort</Typography>\n\n      {sorts.map((sort, index) => (\n        <Div key={index}>\n          <Typography\n            variant=\"subtitle1\"\n            display=\"inline\"\n            style={{ marginRight: \"0.5rem\" }}\n          >\n            {index === 0 ? \"Firstly, sort by \" : \"if tie, then sort by \"}\n          </Typography>\n          <BasicSelect\n            style={{ flexGrow: 1 }}\n            label=\"Field\"\n            value={(sort.field as unknown) as string}\n            onChange={(value: string) => {\n              handleReplace(index, (value as unknown) as T);\n            }}\n          >\n            {sortFields.map((field: T) => {\n              const sField: string = (field as unknown) as string;\n              return (\n                <MenuItem\n                  key={sField}\n                  value={sField}\n                  disabled={_.has(usedSortFields, sField)}\n                >\n                  {_.startCase(sField)}\n                </MenuItem>\n              );\n            })}\n          </BasicSelect>\n          <IconButton onClick={() => handleToggleSort(index)}>\n            {sort.dir === \"asc\" ? <ArrowUpwardIcon /> : <ArrowDownwardIcon />}\n          </IconButton>\n          <IconButton edge=\"start\" onClick={() => handleDelete(index)}>\n            <CloseIcon />\n          </IconButton>\n        </Div>\n      ))}\n\n      <Div>\n        <BasicSelect\n          style={{ width: \"100%\" }}\n          label=\"Add Sort Criteria\"\n          value=\"\"\n          onChange={(value: string) => {\n            handleAdd((value as unknown) as T);\n          }}\n        >\n          {sortFields.map((field: T) => {\n            const sField: string = (field as unknown) as string;\n            return (\n              <MenuItem\n                key={sField}\n                disabled={_.has(usedSortFields, sField)}\n                value={sField}\n              >\n                {_.startCase(sField)}\n              </MenuItem>\n            );\n          })}\n        </BasicSelect>\n      </Div>\n    </div>\n  );\n}\n\nexport default SortForm;\n","import React from \"react\";\nimport useReactRouter from \"use-react-router\";\nimport queryString from \"query-string\";\nimport { ISort } from \"src/util/types\";\n\nexport default function<Filter, Pagination, SortField>(\n  initFilter: Filter,\n  initPagination: Pagination,\n  initSorts: ISort<SortField>[]\n) {\n  const { location, history } = useReactRouter();\n\n  const [filter, setFilter] = React.useState<Filter>({} as Filter);\n  const [pagination, setPagination] = React.useState<Pagination>(\n    {} as Pagination\n  );\n  const [sorts, setSorts] = React.useState<ISort<SortField>[]>([]);\n\n  // push initial state to history\n  React.useEffect(() => {\n    const parsed = queryString.parse(location.search);\n    const query = queryString.stringify({\n      ...initFilter,\n      ...initPagination,\n      sorts: stringifySorts(initSorts),\n      ...parsed\n    });\n    history.push({ pathname: location.pathname, search: query });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // update local state based on location\n  React.useEffect(() => {\n    const parsed = queryString.parse(location.search);\n    const sorts: ISort<SortField>[] = !parsed.sorts\n      ? []\n      : (parsed.sorts as string).split(\",\").map(_sort => {\n          const [field, dir] = _sort.split(\" \");\n          return ({\n            field,\n            dir\n          } as unknown) as ISort<SortField>;\n        });\n    setFilter((parsed as unknown) as Filter);\n    setPagination((parsed as unknown) as Pagination);\n    setSorts(sorts);\n  }, [location]);\n\n  const stringifySorts = React.useCallback((sorts: ISort<SortField>[]) => {\n    return sorts.map(sort => `${sort.field} ${sort.dir}`).join(\",\");\n  }, []);\n\n  const updateFilter = React.useCallback(\n    (_filter: Filter) => {\n      const parsed = queryString.parse(location.search);\n      const query = queryString.stringify({\n        ...parsed,\n        ..._filter,\n        offset: 0\n      });\n      history.push({ pathname: location.pathname, search: query });\n    },\n    [location, history]\n  );\n\n  const updatePagination = React.useCallback(\n    (_pagination: Pagination) => {\n      const parsed = queryString.parse(location.search);\n      const query = queryString.stringify({\n        ...parsed,\n        ..._pagination\n      });\n      history.push({ pathname: location.pathname, search: query });\n    },\n    [location, history]\n  );\n\n  const updateSorts = React.useCallback(\n    (_sorts: ISort<SortField>[]) => {\n      const parsed = queryString.parse(location.search);\n      const query = queryString.stringify({\n        ...parsed,\n        sorts: stringifySorts(_sorts)\n      });\n      history.push({ pathname: location.pathname, search: query });\n    },\n    [location, history, stringifySorts]\n  );\n\n  return React.useMemo(() => {\n    return {\n      filter,\n      pagination,\n      sorts,\n      updateFilter,\n      updatePagination,\n      updateSorts\n    };\n  }, [filter, pagination, sorts, updateFilter, updatePagination, updateSorts]);\n}\n","import styled from \"styled-components\";\nimport { Paper } from \"@material-ui/core\";\n\nexport const TablePaper = styled(Paper)`\n  padding: 1.5rem;\n`;\n\nexport const TableInfoWrapper = styled.div`\n  margin-left: 0rem;\n`;\n\nexport const TableTitle = styled.div`\n  display: flex;\n  align-items: center;\n`;\n","import React from \"react\";\nimport { ReactNode } from \"react\";\nimport { Collapse, Button } from \"@material-ui/core\";\nimport {\n  KeyboardArrowUp as KeyboardArrowUpIcon,\n  KeyboardArrowDown as KeyboardArrowDownIcon\n} from \"@material-ui/icons\";\n\ninterface IComponentProps {\n  defaultExpanded?: boolean;\n  children?: ReactNode;\n}\n\nfunction CollapseFilterAndSort(props: IComponentProps) {\n  const { defaultExpanded, children } = props;\n  const [expanded, setExpanded] = React.useState<boolean>(\n    defaultExpanded || false\n  );\n\n  const toggleShow = React.useCallback(() => {\n    setExpanded(!expanded);\n  }, [expanded]);\n\n  return (\n    <div>\n      <div style={{ textAlign: \"right\" }}>\n        <Button onClick={toggleShow} color=\"primary\">\n          {!expanded ? <KeyboardArrowDownIcon /> : <KeyboardArrowUpIcon />}{\" \"}\n          {!expanded ? \"Show\" : \"Hide\"} Filter & Sort\n        </Button>\n      </div>\n      <Collapse in={expanded} timeout=\"auto\">\n        {children}\n      </Collapse>\n    </div>\n  );\n}\n\nexport default CollapseFilterAndSort;\n","import _ from \"lodash\";\nimport React from \"react\";\nimport { CircularProgress, Typography, Grid } from \"@material-ui/core\";\nimport { People as TitleIcon } from \"@material-ui/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Column } from \"react-table\";\n\nimport Table, {\n  OnPaginationChangeFn,\n} from \"src/components/generic/table/ReactTableSSR\";\nimport { RootState } from \"src/store\";\nimport { goPromise } from \"src/util/helper\";\nimport useIntervalRun from \"src/hooks/useIntervalRun\";\nimport TopAction from \"./TopAction\";\nimport {\n  IUser,\n  IUserGetAction,\n  PUserPagination,\n  PUserFilter,\n  getUsers,\n  UserSortField,\n} from \"src/store/user\";\nimport FilterForm from \"./FilterForm\";\nimport SortForm from \"../../generic/SortForm\";\nimport useTableUrlState from \"src/hooks/useTableUrlState\";\nimport moment from \"moment\";\nimport {\n  TablePaper,\n  TableInfoWrapper,\n  TableTitle,\n} from \"src/components/generic/table/table-infos\";\nimport CollapseFilterAndSort from \"src/components/generic/CollapseFilterAndSort\";\n\nfunction Users() {\n  const refreshDelay = 5000;\n  const {\n    filter,\n    pagination,\n    sorts,\n    updateFilter,\n    updatePagination,\n    updateSorts,\n  } = useTableUrlState<PUserFilter, PUserPagination, UserSortField>(\n    {\n      created_at_start: moment.utc(0).format(\"YYYY-MM-DD\"),\n      created_at_end: moment().format(\"YYYY-MM-DD\"),\n    },\n    { limit: 5, offset: 0 },\n    []\n  );\n  const [error, setError] = React.useState<string>(\"\");\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const users = useSelector<RootState, IUser[]>((state) => state.user.users);\n  const dispatch = useDispatch();\n\n  const userRealTotal = useSelector<RootState, number>(\n    (state) => state.user.realTotal\n  );\n  const userSortFields: UserSortField[] = React.useMemo(\n    () => [\"id\", \"username\", \"full_name\", \"email\"],\n    []\n  );\n\n  // interval fetch\n  const autoFetch = React.useCallback(async () => {\n    const [err, res] = await goPromise<IUserGetAction>(\n      getUsers(pagination, filter, sorts)\n    );\n    if (err) {\n      throw err;\n    } else {\n      dispatch(res);\n    }\n  }, [dispatch, pagination, filter, sorts]);\n  const intervalRun = useIntervalRun(() => autoFetch(), refreshDelay);\n  const {\n    setAlive: setIntervalRunAlive,\n    restart: restartIntervalRun,\n  } = intervalRun;\n\n  // initial fetch\n  const fetch = React.useCallback(async () => {\n    setError(\"\");\n    setLoading(true);\n    const [err, res] = await goPromise<IUserGetAction>(\n      getUsers({ offset: 0, limit: 5 }, {}, [])\n    );\n    setLoading(false);\n    if (err) {\n      console.log({ err });\n      setError(\"error\");\n    } else {\n      dispatch(res);\n      setIntervalRunAlive(true);\n    }\n  }, [dispatch, setIntervalRunAlive]);\n  React.useEffect(() => {\n    fetch();\n  }, [fetch]);\n\n  const dRestartIntervalRun = React.useMemo(\n    () => _.debounce(restartIntervalRun, 1000),\n    [restartIntervalRun]\n  );\n\n  // on table change (pagination, filter, sorts)\n  React.useEffect(() => {\n    dRestartIntervalRun();\n  }, [dRestartIntervalRun, pagination, filter, sorts]);\n\n  const onPaginationChange: OnPaginationChangeFn = React.useCallback(\n    (pageIndex, pageSize) => {\n      updatePagination({\n        offset: pageIndex * pageSize,\n        limit: pageSize,\n      });\n    },\n    [updatePagination]\n  );\n\n  const columns: Column<IUser>[] = React.useMemo(\n    () => [\n      {\n        Header: \"User ID\",\n        accessor: \"id\",\n      },\n      {\n        Header: \"Username\",\n        accessor: \"username\",\n      },\n      {\n        Header: \"Full Name\",\n        accessor: \"full_name\",\n      },\n      {\n        Header: \"Gender\",\n        accessor: \"gender\",\n      },\n      {\n        Header: \"Email\",\n        accessor: \"email\",\n      },\n      {\n        Header: \"Actions\",\n        accessor: \"\",\n        Cell: ({ row: { original } }) => {\n          return <div></div>;\n        },\n      },\n    ],\n    []\n  );\n\n  return (\n    <>\n      <br />\n      <br />\n      <Grid container justify=\"center\">\n        <Grid item xs={11} sm={11} md={11} lg={10}>\n          <TablePaper elevation={3}>\n            <TableInfoWrapper>\n              <TableTitle>\n                <Typography variant=\"h6\">Users</Typography>\n                <TitleIcon\n                  style={{ marginLeft: \"0.5rem\", color: \"cornflowerblue\" }}\n                />\n              </TableTitle>\n              <Typography variant=\"subtitle1\">List of all users</Typography>\n            </TableInfoWrapper>\n            <br />\n            <br />\n\n            {loading ? (\n              <div style={{ textAlign: \"center\" }}>\n                <CircularProgress size={24} /> Loading...\n              </div>\n            ) : error ? (\n              <Typography variant=\"subtitle1\" color=\"secondary\">\n                An error occured, please{\" \"}\n                <span onClick={fetch} style={{ color: \"lightblue\" }}>\n                  retry\n                </span>\n                .\n              </Typography>\n            ) : users && _.isArray(users) ? (\n              <>\n                {/* Filter Form */}\n                <CollapseFilterAndSort>\n                  <Grid container spacing={3}>\n                    <Grid item xs={12} md={6} lg={3}>\n                      <FilterForm filter={filter} updateFilter={updateFilter} />\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                      <SortForm<UserSortField>\n                        sorts={sorts}\n                        sortFields={userSortFields}\n                        updateSorts={updateSorts}\n                      />\n                    </Grid>\n                  </Grid>\n                </CollapseFilterAndSort>\n                {/* top action */}\n                <br />\n                <TopAction\n                  intervalRun={intervalRun}\n                  refreshDelay={refreshDelay}\n                />\n                <Table\n                  pageIndex={pagination.offset / pagination.limit}\n                  pageSize={Number(pagination.limit)}\n                  columns={columns}\n                  data={users}\n                  rowCount={userRealTotal}\n                  onPaginationChange={onPaginationChange}\n                  disableSorting={true}\n                />\n              </>\n            ) : null}\n          </TablePaper>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default Users;\n","export enum RoutePath {\n  BANNER = \"/banner\",\n  LOGOUT = \"/logout\",\n  LOGIN = \"/login\",\n  USER = \"/user\",\n  DASHBOARD = \"/dashboard\",\n  WILDCARD = \"*\",\n}\n","import React from \"react\";\nimport moment from \"moment\";\nimport jwtDecode from \"jwt-decode\";\nimport { useSelector } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\nimport { RootState } from \"src/store\";\nimport BasicDialog from \"src/components/generic/dialog/BasicDialog\";\nimport Link from \"src/components/generic/Link\";\nimport { JWToken } from \"src/util/types\";\n// import styled from \"styled-components\";\n\n// const TimerPanel = styled.div`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   position: fixed;\n//   left: 50%;\n//   top: 0\n//   transform: translate(-50%, 0);\n//   font-size: 0.8rem;\n//   font-family: Roboto;\n//   color: rgba(0, 0, 0, 0.65);\n//   background: rgba(255, 255, 255, 0.75);\n//   border-bottom-left-radius: 5px;\n//   border-bottom-right-radius: 5px;\n//   padding: 0.15em 0.25em;\n//   width: 7.5em;\n//   z-index: 20;\n// `;\n\nconst JwtTimer = () => {\n  const token = useSelector<RootState, string>((state) => state.auth.token);\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n  const [timerMs, setTimerMs] = React.useState<number>(0);\n\n  React.useEffect(() => {\n    if (!token) return;\n    const decoded: JWToken = jwtDecode(token);\n\n    const expiredTimeLeftMs = Math.max(\n      0,\n      decoded.exp * 1000 - moment().valueOf()\n    );\n    const expiredTimeout: number = setTimeout(() => {\n      setDialogOpen(true);\n    }, expiredTimeLeftMs);\n\n    const timerInterval = setInterval(() => {\n      setTimerMs(decoded.exp * 1000 - moment().valueOf());\n    }, 1000);\n\n    return () => {\n      clearTimeout(expiredTimeout);\n      clearInterval(timerInterval);\n    };\n  }, [token]);\n\n  return (\n    <>\n      {/* <TimerPanel>\n        {String(Math.floor(timerMs / (60 * 60 * 1000))).padStart(2, \"0\")} :{\" \"}\n        {String(\n          Math.floor(Math.floor(timerMs % (60 * 60 * 1000)) / (60 * 1000))\n        ).padStart(2, \"0\")}{\" \"}\n        :{\" \"}\n        {String(Math.floor(Math.floor(timerMs % (60 * 1000)) / 1000)).padStart(\n          2,\n          \"0\"\n        )}\n      </TimerPanel> */}\n      <BasicDialog\n        open={dialogOpen}\n        dismiss={() => {}}\n        maxWidth=\"xs\"\n        fullWidth={true}\n      >\n        <title>Your session has expired</title>\n        <details>Please login again to access this admin panel again.</details>\n        <section>\n          <div style={{ textAlign: \"right\" }}>\n            <Button color=\"primary\" variant=\"contained\">\n              <Link to=\"/logout\">Login</Link>\n            </Button>\n          </div>\n        </section>\n      </BasicDialog>\n    </>\n  );\n};\n\nexport default JwtTimer;\n","import React from \"react\";\nimport { Typography, Button } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"src/store\";\nimport { IFavorite } from \"src/store/favorite\";\nimport \"src/components/main/Auth/style.css\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport accompaniment from \"src/accompaniment.mp3\";\nimport vocals from \"src/vocals.mp3\";\nimport ReactJkMusicPlayer from \"react-jinke-music-player\";\nimport \"react-jinke-music-player/assets/index.css\";\n\nfunction Dashboard() {\n  const playingFavorite = useSelector<RootState, IFavorite>(\n    (state) => state.favorie.playingFavorite\n  );\n\n  const accompanimentInstance = React.useRef<any>(null);\n  const vocalsInstance = React.useRef<any>(null);\n  const [vocalMuted, setVocalMuted] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    if (!vocalsInstance.current) return;\n    if (vocalMuted) vocalsInstance.current.volume = 0;\n    else vocalsInstance.current.volume = 1;\n  }, [vocalMuted]);\n\n  return (\n    <div\n      style={{\n        backgroundColor: \"#172727\",\n        height: \"100vh\",\n        width: \"100vw\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      {!playingFavorite ? (\n        <Typography variant=\"h3\" align=\"center\" style={{ color: \"white\" }}>\n          Upload a Song <br />\n          <span style={{ fontSize: \"1.5rem\" }}>or</span>\n          <br /> Choose from Library\n        </Typography>\n      ) : (\n        <div>\n          <Typography variant=\"h6\" align=\"center\" style={{ color: \"white\" }}>\n            Now Playing\n          </Typography>\n          <br />\n          <Typography\n            variant=\"h3\"\n            className=\"kerokeh-title\"\n            style={{ letterSpacing: \"0.5rem\" }}\n          >\n            <strong>{playingFavorite.song.title}</strong>\n          </Typography>\n          {/* <div style={{ position: \"fixed\", bottom: 0, left: 0, width: \"100%\" }}>\n            <AudioPlayer\n              showSkipControls={false}\n              showJumpControls={false}\n              showDownloadProgress={false}\n              showFilledProgress={false}\n              autoPlay\n              src={accompaniment}\n              onPlay={(e: any) => console.log(\"onPlay\")}\n              // other props here\n            />\n          </div> */}\n\n          <div style={{ position: \"fixed\", bottom: 0, left: 0, width: \"100%\" }}>\n            <ReactJkMusicPlayer\n              getAudioInstance={(instance) =>\n                (accompanimentInstance.current = instance)\n              }\n              audioLists={[\n                {\n                  name: playingFavorite.song.title,\n                  musicSrc: playingFavorite.song.accompaniment_path,\n                },\n              ]}\n              autoPlay\n              mode=\"full\"\n              showMiniModeCover={false}\n              showMiniProcessBar={false}\n              // showProgressLoadBar={false}\n              showReload={false}\n              showDownload={false}\n              showPlayMode={false}\n              showThemeSwitch={false}\n              showLyric={false}\n              showDestroy={false}\n              onAudioSeeked={(audioInfo: any) => {\n                console.log(audioInfo);\n                vocalsInstance.current.currentTime = audioInfo.currentTime;\n                accompanimentInstance.current.currentTime =\n                  audioInfo.currentTime;\n              }}\n              onAudioPlay={(audioInfo: any) => {\n                if (!vocalMuted) {\n                  vocalsInstance.current.play();\n                }\n              }}\n              onAudioPause={(audioInfo: any) => {\n                if (!vocalMuted) {\n                  vocalsInstance.current.pause();\n                }\n              }}\n            />\n          </div>\n          <div style={{ display: \"none\" }}>\n            <ReactJkMusicPlayer\n              getAudioInstance={(instance) =>\n                (vocalsInstance.current = instance)\n              }\n              audioLists={[\n                { name: \"lol\", musicSrc: playingFavorite.song.vocals_path },\n              ]}\n              autoPlay\n              mode=\"full\"\n              showMiniModeCover={false}\n              showMiniProcessBar={false}\n              // showProgressLoadBar={false}\n              showReload={false}\n              showDownload={false}\n              showPlayMode={false}\n              showThemeSwitch={false}\n              showLyric={false}\n              showDestroy={false}\n            />\n          </div>\n\n          <div\n            style={{\n              position: \"fixed\",\n              bottom: 100,\n              right: 20,\n              width: \"100vw\",\n              textAlign: \"right\",\n            }}\n          >\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={() => setVocalMuted(!vocalMuted)}\n            >\n              {vocalMuted ? \"Unmute Vocal\" : \"Mute Vocal\"}\n            </Button>\n          </div>\n        </div>\n      )}\n      {/* <Grid container justify=\"center\">\n        <Grid item xs={11} sm={11} md={11} lg={10}>\n          <div style={{ textAlign: \"center\" }}>\n            <CircularProgress size={24} />\n          </div>\n        </Grid>\n      </Grid> */}\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport moment from \"moment\";\nimport jwtDecode from \"jwt-decode\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { Typography, CircularProgress } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport Nav from \"src/components/main/Nav\";\nimport Login from \"src/components/main/Auth/Login\";\nimport Logout from \"src/components/main/Auth/Logout\";\nimport User from \"src/components/main/User\";\nimport JwtTimer from \"src/components/misc/JwtTimer\";\nimport { RootState } from \"src/store\";\nimport { getMe, IGetMeAction } from \"src/store/auth\";\nimport { goPromise } from \"src/util/helper\";\nimport { JWToken } from \"src/util/types\";\nimport { RoutePath } from \"./routes\";\nimport Dashboard from \"src/components/main/Dashboard\";\n\nenum EErrorType {\n  FETCH_FAIL,\n  SESSION_EXPIRED,\n}\n\nconst CenterItAll = styled(\"div\")`\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n`;\n\nconst routes = [\n  {\n    routePath: RoutePath.DASHBOARD,\n    component: <Dashboard />,\n  },\n  {\n    routePath: RoutePath.LOGOUT,\n    component: <Logout />,\n  },\n  {\n    routePath: RoutePath.USER,\n    component: <User />,\n  },\n];\n\nconst AdminRoutes = () => {\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const [error, setError] = React.useState<EErrorType | null>(null);\n  const token = useSelector<RootState, string>((state) => state.auth.token);\n  const dispatch = useDispatch();\n\n  const fetch = React.useCallback(async () => {\n    setLoading(true);\n\n    const [err, res] = await goPromise<IGetMeAction>(getMe());\n    if (err) setError(EErrorType.FETCH_FAIL);\n    else dispatch(res);\n\n    setLoading(false);\n  }, [dispatch]);\n\n  // check if JWT is expired or not\n  React.useEffect(() => {\n    const decoded: JWToken = jwtDecode(token);\n    if (decoded.exp * 1000 < moment().valueOf()) {\n      localStorage.removeItem(\"auth_token\");\n      setError(EErrorType.SESSION_EXPIRED);\n    } else {\n      fetch();\n    }\n  }, [fetch, token]);\n\n  // render component based on condition\n  if (error === EErrorType.FETCH_FAIL) {\n    // fail to fetch\n    return (\n      <CenterItAll>\n        <Typography variant=\"subtitle1\">\n          Can't get your profile. Please{\" \"}\n          <a href=\"/\" style={{ color: \"lightblue\" }}>\n            refresh\n          </a>{\" \"}\n          the page.\n        </Typography>\n      </CenterItAll>\n    );\n  } else if (error === EErrorType.SESSION_EXPIRED) {\n    // session expired\n    return (\n      <CenterItAll>\n        <Typography variant=\"subtitle1\">\n          Your session has expired. Please{\" \"}\n          <a href=\"/\" style={{ color: \"lightblue\" }}>\n            login\n          </a>{\" \"}\n          again.\n        </Typography>\n      </CenterItAll>\n    );\n  } else if (loading) {\n    // still loading\n    return (\n      <CenterItAll>\n        <CircularProgress size={24} /> &nbsp;{\" \"}\n        <Typography variant=\"subtitle1\">Please wait...</Typography>\n      </CenterItAll>\n    );\n  } else {\n    // success\n    return (\n      <>\n        <Nav />\n\n        <JwtTimer />\n\n        <Switch>\n          {routes.map((route) => (\n            <Route key={route.routePath} path={route.routePath}>\n              {route.component}\n            </Route>\n          ))}\n          <Route path=\"*\">{() => <Redirect to={RoutePath.DASHBOARD} />}</Route>\n        </Switch>\n      </>\n    );\n  }\n};\n\nconst App = () => {\n  const token = useSelector<RootState, string>((state) => state.auth.token);\n\n  return (\n    <Router>\n      {!token ? (\n        <Switch>\n          <Route path={RoutePath.LOGIN}>\n            <Login />\n          </Route>\n          <Route path=\"*\">{() => <Redirect to={RoutePath.LOGIN} />}</Route>\n        </Switch>\n      ) : (\n        <AdminRoutes />\n      )}\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport HttpsRedirect from \"react-https-redirect\";\nimport { SnackbarProvider } from \"material-ui-snackbar-provider\";\n\nimport { rootReducer } from \"src/store\";\nimport Router from \"src/Router\";\n\nimport * as serviceWorker from \"./util/serviceWorker\";\n\nconst store = createStore(rootReducer, {\n  auth: {\n    token: localStorage.getItem(\"auth_token\"),\n  },\n});\n\nconst myTheme = createMuiTheme({\n  palette: {\n    primary: { main: \"#FF1493\" },\n    secondary: { main: \"#000\" },\n  },\n});\n\nReactDOM.render(\n  <SnackbarProvider SnackbarProps={{ autoHideDuration: 2000 }}>\n    <Provider store={store}>\n      <MuiThemeProvider theme={myTheme}>\n        <HttpsRedirect>\n          <Router />\n        </HttpsRedirect>\n      </MuiThemeProvider>\n    </Provider>\n  </SnackbarProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}